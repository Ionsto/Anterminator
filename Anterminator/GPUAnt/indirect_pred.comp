#version 430
#include entity_common.comp

void ExecuteBehaviourPredator(uint i)
{
	if(EntityList[i].Alive == 1)
	{
		RandomWalk(i,100,0.01);
		if(abs(EntityList[i].MaxEnergy - EntityList[i].Energy) > 100)
		{
			FollowPhermomonScent(i,0,20,200);
			FollowPhermomonScent(i,2,20,200);
		}
		FollowPhermomonScent(i,1,10,-100);
		FollowPhermomonScent(i,3,10,100);
		float EnergyThresh = (EntityList[i].MaxEnergy * 0.5);
		if(EntityList[i].Energy > EnergyThresh)// && EntityList[i].Age < 80 && EntityList[i].Age > 10)
		{
			if(!any(isinf(EntityList[i].Position)) && !any(isnan(EntityList[i].Position))){
				int id = AddEntity(3);
				if(id != -1)
				{
					float ang = random(vec2(i,2 * i) + RandomTimeSeed) * 3.14 * 2;
					float dist = 1 + (0.1*abs(random(vec2(i,2 * i) + 9.2 * RandomTimeSeed)));
					vec2 displacement = vec2(cos(ang),sin(ang)) * dist * 2 * EntityList[i].Size;
					CreatePredator(id);
					memoryBarrier();
					//TODO: Analyse nan
					EntityList[id].Position = EntityList[i].Position + displacement;
					EntityList[id].PositionOld = EntityList[i].Position + displacement;
					EntityList[i].Energy -= EnergyThresh * 0.8;
					EntityList[id].AudioFlags = int(EntityList[id].AudioFlags) | (1<<0);
					if(any(isinf(EntityList[id].Position)) || any(isnan(EntityList[id].Position))){
						EntityList[id].Position = vec2(0,0);
						EntityList[id].PositionOld = vec2(0,0);
						EntityList[id].ToRemove = 1;
						EntityList[id].Alive = 0;
					}
					memoryBarrier();
					//EntityList[id].Affiliation = EntityList[i].Affiliation;
					//EntityList[id].Colour = EntityList[i].Colour;
				}
			}
		}
	}
	PlacePheremoneScent(i,1,1.5,10);
}

void main()
{
    uint i = gl_GlobalInvocationID.x;
	const int ExecutionType = 3;
	//ApplyFriction(i);
	if(i < gpuscene.TypeCount[ExecutionType] && i < MaxEntityCount)
	{
		int id = indirection_list[ExecutionType][i];
		if(EntityList[id].ToRemove != 1){
			ExecuteBehaviourPredator(id);
		}
	}
}