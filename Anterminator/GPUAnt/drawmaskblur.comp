#version 430
const float dt = 0.02;
layout(rgba32f,binding=1) uniform image2D DrawMask;
layout (local_size_x = 16,local_size_y = 16,local_size_z=1) in;
float random (vec2 st) {
    return fract(sin(dot(st.xy,
                         vec2(12.9898,78.233)))*
        43758.5453123);
}
const int WorldSize = 2048;
const float PheremoneResolution = 4;
const float MaskResolution = 8;
const int PhPerMask = int(MaskResolution/PheremoneResolution);
const int MaskCount = int((2 * WorldSize/MaskResolution));

void main()
{
    uvec2 xy = gl_GlobalInvocationID.xy;
    uint aff = gl_GlobalInvocationID.z;
	float value = 0;
	int size = 1;
	float acc = 0;
	float blendfactor = 0.1;
	for(int dx = -size;dx <= size;++dx){
		for(int dy = -size;dy <= size;++dy){
			ivec2 sampleloc = ivec2(xy) + ivec2(dx,dy);
			for(int i = 0;i < 2;++i){
				if(sampleloc[i] < 0){
					sampleloc[i] += MaskCount;
				}
				if(sampleloc[i] >= MaskCount){
					sampleloc[i] -= MaskCount;
				}
			}
			acc += blendfactor * imageLoad(DrawMask,sampleloc).x;
		}
	}
	acc += (1-blendfactor) * imageLoad(DrawMask,ivec2(xy)).x;
	acc /= ((size*2 + 1) * (size*2 + 1) * blendfactor) + 1 - blendfactor;
	acc = clamp(acc,0,1);
	imageStore(DrawMask,ivec2(xy),vec4(acc,0,0,0));
}
