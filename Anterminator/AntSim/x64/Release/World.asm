; Listing generated by Microsoft (R) Optimizing Compiler Version 19.22.27905.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BP@LCBPOPOI@Spacial?5hash?5ran?5out?5of?5space?6@ ; `string'
PUBLIC	??_C@_06BDKAMNCK@?5died?6@			; `string'
PUBLIC	??_C@_07DBDIABGE@Colony?5@			; `string'
PUBLIC	??_C@_0BD@KJLPHLLL@Info?5about?5entity?3@	; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5@				; `string'
PUBLIC	??_C@_09BKHOEFBM@Position?3@			; `string'
PUBLIC	??_C@_07KBHBKPBF@Health?3@			; `string'
PUBLIC	??_C@_07CDHKLEPN@Energy?3@			; `string'
PUBLIC	??_C@_04JBAKGBBD@Age?3@				; `string'
PUBLIC	??_C@_0L@CCILMKOL@Held?5food?3@			; `string'
PUBLIC	??_C@_0BA@BLMCHBJI@Time?5from?5home?3@		; `string'
PUBLIC	??_C@_0BA@IKADLCFE@Time?5from?5food?3@		; `string'
EXTRN	__imp__time64:PROC
;	COMDAT ??_C@_0BA@IKADLCFE@Time?5from?5food?3@
CONST	SEGMENT
??_C@_0BA@IKADLCFE@Time?5from?5food?3@ DB 'Time from food:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BLMCHBJI@Time?5from?5home?3@
CONST	SEGMENT
??_C@_0BA@BLMCHBJI@Time?5from?5home?3@ DB 'Time from home:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CCILMKOL@Held?5food?3@
CONST	SEGMENT
??_C@_0L@CCILMKOL@Held?5food?3@ DB 'Held food:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04JBAKGBBD@Age?3@
CONST	SEGMENT
??_C@_04JBAKGBBD@Age?3@ DB 'Age:', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CDHKLEPN@Energy?3@
CONST	SEGMENT
??_C@_07CDHKLEPN@Energy?3@ DB 'Energy:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBHBKPBF@Health?3@
CONST	SEGMENT
??_C@_07KBHBKPBF@Health?3@ DB 'Health:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BKHOEFBM@Position?3@
CONST	SEGMENT
??_C@_09BKHOEFBM@Position?3@ DB 'Position:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KJLPHLLL@Info?5about?5entity?3@
CONST	SEGMENT
??_C@_0BD@KJLPHLLL@Info?5about?5entity?3@ DB 'Info about entity:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBDIABGE@Colony?5@
CONST	SEGMENT
??_C@_07DBDIABGE@Colony?5@ DB 'Colony ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BDKAMNCK@?5died?6@
CONST	SEGMENT
??_C@_06BDKAMNCK@?5died?6@ DB ' died', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LCBPOPOI@Spacial?5hash?5ran?5out?5of?5space?6@
CONST	SEGMENT
??_C@_0BP@LCBPOPOI@Spacial?5hash?5ran?5out?5of?5space?6@ DB 'Spacial hash'
	DB	' ran out of space', 0aH, 00H		; `string'
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><>
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	??0Chunk@@QEAA@XZ				; Chunk::Chunk
PUBLIC	??$construct@VChunk@@$$V@?$_Default_allocator_traits@V?$allocator@VChunk@@@std@@@std@@SAXAEAV?$allocator@VChunk@@@1@QEAVChunk@@@Z ; std::_Default_allocator_traits<std::allocator<Chunk> >::construct<Chunk>
PUBLIC	??$_Unfancy@VChunk@@@std@@YAPEAVChunk@@PEAV1@@Z	; std::_Unfancy<Chunk>
PUBLIC	??$construct@V?$vector@MV?$allocator@M@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@QEAV?$vector@MV?$allocator@M@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::vector<float,std::allocator<float> > > >::construct<std::vector<float,std::allocator<float> > >
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@VChunk@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<Chunk> >::_Emplace_back<>
PUBLIC	??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z	; std::_Copy_memmove<float *,float *>
PUBLIC	??$_Get_unwrapped@M@std@@YAPEAMQEAM@Z		; std::_Get_unwrapped<float>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<std::vector<float,std::allocator<float> > > >::_Emplace_back<>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@MV?$allocator@M@std@@@1@AEAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::vector<float,std::allocator<float> > > >::_Uninitialized_backout_al<std::allocator<std::vector<float,std::allocator<float> > > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::vector<float,std::allocator<float> > > >::~_Uninitialized_backout_al<std::allocator<std::vector<float,std::allocator<float> > > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QEAAPEAV?$vector@MV?$allocator@M@std@@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::vector<float,std::allocator<float> > > >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@VChunk@@@std@@@std@@QEAA@PEAVChunk@@AEAV?$allocator@VChunk@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<Chunk> >::_Uninitialized_backout_al<std::allocator<Chunk> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@VChunk@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<Chunk> >::~_Uninitialized_backout_al<std::allocator<Chunk> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@VChunk@@@std@@@std@@QEAAPEAVChunk@@XZ ; std::_Uninitialized_backout_al<std::allocator<Chunk> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@VChunk@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<Chunk> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<std::vector<float,std::allocator<float> > > >::__autoclassinit2
PUBLIC	??$_Get_size_of_n@$0EOCE@@std@@YA_K_K@Z		; std::_Get_size_of_n<20004>
PUBLIC	??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z		; std::_Get_size_of_n<24>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@VChunk@@@std@@@std@@YAPEAVChunk@@PEAV1@_KAEAV?$allocator@VChunk@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<Chunk> >
PUBLIC	??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z ; std::_Uninitialized_move<float *,std::allocator<float> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@YAPEAV?$vector@MV?$allocator@M@std@@@0@PEAV10@_KAEAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<std::vector<float,std::allocator<float> > > >
PUBLIC	??$forward@AEBV?$allocator@VChunk@@@std@@@std@@YAAEBV?$allocator@VChunk@@@0@AEBV10@@Z ; std::forward<std::allocator<Chunk> const &>
PUBLIC	??$forward@AEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@YAAEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::vector<float,std::allocator<float> > > const &>
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@VChunk@@@std@@V?$_Vector_val@U?$_Simple_types@VChunk@@@std@@@2@$00@std@@QEBAAEBV?$allocator@VChunk@@@2@XZ ; std::_Compressed_pair<std::allocator<Chunk>,std::_Vector_val<std::_Simple_types<Chunk> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@MV?$allocator@M@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::vector<float,std::allocator<float> > >,std::_Vector_val<std::_Simple_types<std::vector<float,std::allocator<float> > > >,1>::_Get_first
PUBLIC	?allocate@?$allocator@VChunk@@@std@@QEAAPEAVChunk@@_K@Z ; std::allocator<Chunk>::allocate
PUBLIC	?_Getal@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEBAAEBV?$allocator@VChunk@@@2@XZ ; std::vector<Chunk,std::allocator<Chunk> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@VChunk@@@std@@@std@@SA_KAEBV?$allocator@VChunk@@@2@@Z ; std::_Default_allocator_traits<std::allocator<Chunk> >::max_size
PUBLIC	?allocate@?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAAPEAV?$vector@MV?$allocator@M@std@@@2@_K@Z ; std::allocator<std::vector<float,std::allocator<float> > >::allocate
PUBLIC	?_Getal@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@XZ ; std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::vector<float,std::allocator<float> > > >::max_size
PUBLIC	?max_size@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@QEBA_KXZ ; std::vector<Chunk,std::allocator<Chunk> >::max_size
PUBLIC	?_Buy_raw@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_K@Z ; std::vector<Chunk,std::allocator<Chunk> >::_Buy_raw
PUBLIC	?_Xlength@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@CAXXZ ; std::vector<Chunk,std::allocator<Chunk> >::_Xlength
PUBLIC	?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::capacity
PUBLIC	?_Umove_if_noexcept1@?$vector@MV?$allocator@M@std@@@std@@AEAAXPEAM00U?$integral_constant@_N$00@2@@Z ; std::vector<float,std::allocator<float> >::_Umove_if_noexcept1
PUBLIC	?max_size@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >::max_size
PUBLIC	?_Buy_raw@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >::_Buy_raw
PUBLIC	?_Xlength@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >::_Xlength
PUBLIC	?_Ufill@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAPEAVChunk@@PEAV3@_KU_Value_init_tag@2@@Z ; std::vector<Chunk,std::allocator<Chunk> >::_Ufill
PUBLIC	?_Buy_nonzero@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_K@Z ; std::vector<Chunk,std::allocator<Chunk> >::_Buy_nonzero
PUBLIC	??1?$_Tidy_guard@V?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<Chunk,std::allocator<Chunk> > >::~_Tidy_guard<std::vector<Chunk,std::allocator<Chunk> > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@VChunk@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<Chunk> >::_Vector_val<std::_Simple_types<Chunk> >
PUBLIC	?_Umove@?$vector@MV?$allocator@M@std@@@std@@AEAAPEAMPEAM00@Z ; std::vector<float,std::allocator<float> >::_Umove
PUBLIC	?_Umove_if_noexcept@?$vector@MV?$allocator@M@std@@@std@@AEAAXPEAM00@Z ; std::vector<float,std::allocator<float> >::_Umove_if_noexcept
PUBLIC	?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z ; std::vector<float,std::allocator<float> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z ; std::vector<float,std::allocator<float> >::_Change_array
PUBLIC	?_Ufill@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAPEAV?$vector@MV?$allocator@M@std@@@2@PEAV32@_KU_Value_init_tag@2@@Z ; std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >::_Ufill
PUBLIC	?_Buy_nonzero@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >::_Buy_nonzero
PUBLIC	??1?$_Tidy_guard@V?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > > >::~_Tidy_guard<std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::vector<float,std::allocator<float> > > >::_Vector_val<std::_Simple_types<std::vector<float,std::allocator<float> > > >
PUBLIC	??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<Chunk,std::allocator<Chunk> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
PUBLIC	??$?0AEBV?$allocator@VChunk@@@std@@$$V@?$_Compressed_pair@V?$allocator@VChunk@@@std@@V?$_Vector_val@U?$_Simple_types@VChunk@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@VChunk@@@1@@Z ; std::_Compressed_pair<std::allocator<Chunk>,std::_Vector_val<std::_Simple_types<Chunk> >,1>::_Compressed_pair<std::allocator<Chunk>,std::_Vector_val<std::_Simple_types<Chunk> >,1><std::allocator<Chunk> const &>
PUBLIC	??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z ; std::vector<float,std::allocator<float> >::_Emplace_reallocate<float const &>
PUBLIC	??$construct@MAEBM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAMAEBM@Z ; std::_Default_allocator_traits<std::allocator<float> >::construct<float,float const &>
PUBLIC	??$forward@AEBM@std@@YAAEBMAEBM@Z		; std::forward<float const &>
PUBLIC	??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >::_Construct_n_copies_of_ty<std::_Value_init_tag>
PUBLIC	??$?0AEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@MV?$allocator@M@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::vector<float,std::allocator<float> > >,std::_Vector_val<std::_Simple_types<std::vector<float,std::allocator<float> > > >,1>::_Compressed_pair<std::allocator<std::vector<float,std::allocator<float> > >,std::_Vector_val<std::_Simple_types<std::vector<float,std::allocator<float> > > >,1><std::allocator<std::vector<float,std::allocator<float> > > const &>
PUBLIC	??$min@H@std@@YAAEBHAEBH0@Z			; std::min<int>
PUBLIC	??A?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@QEAAAEAVChunk@@_K@Z ; std::vector<Chunk,std::allocator<Chunk> >::operator[]
PUBLIC	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range
PUBLIC	??A?$array@H$0BDII@@std@@QEAAAEAH_K@Z		; std::array<int,5000>::operator[]
PUBLIC	??0?$allocator@VChunk@@@std@@QEAA@XZ		; std::allocator<Chunk>::allocator<Chunk>
PUBLIC	??0?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@QEAA@_KAEBV?$allocator@VChunk@@@1@@Z ; std::vector<Chunk,std::allocator<Chunk> >::vector<Chunk,std::allocator<Chunk> >
PUBLIC	?_Unchecked_begin@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@QEAAPEAVChunk@@XZ ; std::vector<Chunk,std::allocator<Chunk> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@QEAAPEAVChunk@@XZ ; std::vector<Chunk,std::allocator<Chunk> >::_Unchecked_end
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBM@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAMAEBM@Z ; std::vector<float,std::allocator<float> >::_Emplace_back_with_unused_capacity<float const &>
PUBLIC	??$emplace_back@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAAEAMAEBM@Z ; std::vector<float,std::allocator<float> >::emplace_back<float const &>
PUBLIC	?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z ; std::vector<float,std::allocator<float> >::push_back
PUBLIC	?AddParticle@?$SwapList@VEntity@@$0BIGKA@@@QEAA_NVEntity@@@Z ; SwapList<Entity,100000>::AddParticle
PUBLIC	?RemoveParticle@?$SwapList@VEntity@@$0BIGKA@@@QEAAXH@Z ; SwapList<Entity,100000>::RemoveParticle
PUBLIC	?GetChunk@?$ChunkArray@$0DOI@@@QEAAAEAVChunk@@MM@Z ; ChunkArray<1000>::GetChunk
PUBLIC	?GetChunkPos@?$ChunkArray@$0DOI@@@QEAA?AV?$tuple@HH@std@@MM@Z ; ChunkArray<1000>::GetChunkPos
PUBLIC	?GetChunkGrid@?$ChunkArray@$0DOI@@@QEAAAEAVChunk@@HH@Z ; ChunkArray<1000>::GetChunkGrid
PUBLIC	?_Unchecked_begin@?$array@VColonyController@@$04@std@@QEAAPEAVColonyController@@XZ ; std::array<ColonyController,5>::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$array@VColonyController@@$04@std@@QEAAPEAVColonyController@@XZ ; std::array<ColonyController,5>::_Unchecked_end
PUBLIC	??0?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::allocator<std::vector<float,std::allocator<float> > >::allocator<std::vector<float,std::allocator<float> > >
PUBLIC	??0?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QEAA@_KAEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@@Z ; std::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >::vector<std::vector<float,std::allocator<float> >,std::allocator<std::vector<float,std::allocator<float> > > >
PUBLIC	?UpdateEntities@World@@QEAAXXZ			; World::UpdateEntities
PUBLIC	?UpdateColonies@World@@QEAAXXZ			; World::UpdateColonies
PUBLIC	?UpdateCollisions@World@@QEAAXXZ		; World::UpdateCollisions
PUBLIC	?UpdateCollisionChunk@World@@QEAAXHHHH@Z	; World::UpdateCollisionChunk
PUBLIC	?UpdateCollisionSingleChunk@World@@QEAAXHH@Z	; World::UpdateCollisionSingleChunk
PUBLIC	?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z ; World::UpdateCollisionEntities
PUBLIC	?UpdateDeadEntities@World@@QEAAXXZ		; World::UpdateDeadEntities
PUBLIC	?UpdateSpacialHash@World@@QEAAXXZ		; World::UpdateSpacialHash
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0?$array@VColonyController@@$04@std@@QEAA@XZ	; std::array<ColonyController,5>::array<ColonyController,5>
PUBLIC	??0?$ChunkArray@$0DOI@@@QEAA@XZ			; ChunkArray<1000>::ChunkArray<1000>
PUBLIC	??0?$array@VEntity@@$09@std@@QEAA@XZ		; std::array<Entity,10>::array<Entity,10>
PUBLIC	??0?$SwapList@VEntity@@$09@@QEAA@XZ		; SwapList<Entity,10>::SwapList<Entity,10>
PUBLIC	??0?$array@VEntity@@$0BIGKA@@std@@QEAA@XZ	; std::array<Entity,100000>::array<Entity,100000>
PUBLIC	??0?$SwapList@VEntity@@$0BIGKA@@@QEAA@XZ	; SwapList<Entity,100000>::SwapList<Entity,100000>
PUBLIC	?PrintEntityInfo@World@@QEAAXMM@Z		; World::PrintEntityInfo
PUBLIC	?Update@World@@QEAAXM@Z				; World::Update
PUBLIC	??0World@@QEAA@XZ				; World::World
PUBLIC	?AddEntity@World@@QEAA_NVEntity@@@Z		; World::AddEntity
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VChunk@@$$V@?$_Default_allocator_traits@V?$allocator@VChunk@@@std@@@std@@SAXAEAV?$allocator@VChunk@@@1@QEAVChunk@@@Z DD imagerel $LN9@construct
	DD	imagerel $LN9@construct+38
	DD	imagerel $unwind$??$construct@VChunk@@$$V@?$_Default_allocator_traits@V?$allocator@VChunk@@@std@@@std@@SAXAEAV?$allocator@VChunk@@@1@QEAVChunk@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@VChunk@@@std@@@std@@QEAAXXZ DD imagerel $LN13@Emplace_ba
	DD	imagerel $LN13@Emplace_ba+59
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@VChunk@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z DD imagerel $LN4@Copy_memmo
	DD	imagerel $LN4@Copy_memmo+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@VChunk@@@std@@@std@@YAPEAVChunk@@PEAV1@_KAEAV?$allocator@VChunk@@@0@@Z DD imagerel $LN56@Uninitiali
	DD	imagerel $LN56@Uninitiali+766
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@VChunk@@@std@@@std@@YAPEAVChunk@@PEAV1@_KAEAV?$allocator@VChunk@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z DD imagerel $LN12@Uninitiali
	DD	imagerel $LN12@Uninitiali+52
	DD	imagerel $unwind$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@YAPEAV?$vector@MV?$allocator@M@std@@@0@PEAV10@_KAEAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@0@@Z DD imagerel $LN42@Uninitiali
	DD	imagerel $LN42@Uninitiali+91
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@YAPEAV?$vector@MV?$allocator@M@std@@@0@PEAV10@_KAEAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@VChunk@@@std@@QEAAPEAVChunk@@_K@Z DD imagerel $LN30@allocate
	DD	imagerel $LN30@allocate+46
	DD	imagerel $unwind$?allocate@?$allocator@VChunk@@@std@@QEAAPEAVChunk@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_K@Z DD imagerel $LN37@Buy_raw
	DD	imagerel $LN37@Buy_raw+69
	DD	imagerel $unwind$?_Buy_raw@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@CAXXZ DD imagerel $LN4@Xlength
	DD	imagerel $LN4@Xlength+18
	DD	imagerel $unwind$?_Xlength@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN36@Buy_raw
	DD	imagerel $LN36@Buy_raw+40
	DD	imagerel $unwind$?_Buy_raw@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@CAXXZ DD imagerel $LN4@Xlength
	DD	imagerel $LN4@Xlength+18
	DD	imagerel $unwind$?_Xlength@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_K@Z DD imagerel $LN53@Buy_nonzer
	DD	imagerel $LN53@Buy_nonzer+69
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@MV?$allocator@M@std@@@std@@AEAAPEAMPEAM00@Z DD imagerel $LN19@Umove
	DD	imagerel $LN19@Umove+49
	DD	imagerel $unwind$?_Umove@?$vector@MV?$allocator@M@std@@@std@@AEAAPEAMPEAM00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z DD imagerel $LN39@Change_arr
	DD	imagerel $LN39@Change_arr+136
	DD	imagerel $unwind$?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ufill@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAPEAV?$vector@MV?$allocator@M@std@@@2@PEAV32@_KU_Value_init_tag@2@@Z DD imagerel $LN48@Ufill
	DD	imagerel $LN48@Ufill+91
	DD	imagerel $unwind$?_Ufill@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAPEAV?$vector@MV?$allocator@M@std@@@2@PEAV32@_KU_Value_init_tag@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN52@Buy_nonzer
	DD	imagerel $LN52@Buy_nonzer+40
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN71@Construct_
	DD	imagerel $LN71@Construct_+77
	DD	imagerel $unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z DD imagerel $LN176@Emplace_re
	DD	imagerel $LN176@Emplace_re+70
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z DD imagerel $LN176@Emplace_re+70
	DD	imagerel $LN176@Emplace_re+387
	DD	imagerel $chain$2$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z DD imagerel $LN176@Emplace_re+387
	DD	imagerel $LN176@Emplace_re+394
	DD	imagerel $chain$4$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z DD imagerel $LN176@Emplace_re+394
	DD	imagerel $LN176@Emplace_re+400
	DD	imagerel $chain$5$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN109@Construct_
	DD	imagerel $LN109@Construct_+132
	DD	imagerel $unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@QEAA@_KAEBV?$allocator@VChunk@@@1@@Z DD imagerel $LN80@vector
	DD	imagerel $LN80@vector+91
	DD	imagerel $unwind$??0?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@QEAA@_KAEBV?$allocator@VChunk@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveParticle@?$SwapList@VEntity@@$0BIGKA@@@QEAAXH@Z DD imagerel $LN13@RemovePart
	DD	imagerel $LN13@RemovePart+129
	DD	imagerel $unwind$?RemoveParticle@?$SwapList@VEntity@@$0BIGKA@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QEAA@_KAEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@@Z DD imagerel $LN118@vector
	DD	imagerel $LN118@vector+154
	DD	imagerel $unwind$??0?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QEAA@_KAEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateEntities@World@@QEAAXXZ DD imagerel $LN31@UpdateEnti
	DD	imagerel $LN31@UpdateEnti+217
	DD	imagerel $unwind$?UpdateEntities@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateColonies@World@@QEAAXXZ DD imagerel $LN116
	DD	imagerel $LN116+85
	DD	imagerel $unwind$?UpdateColonies@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?UpdateColonies@World@@QEAAXXZ DD imagerel $LN116+85
	DD	imagerel $LN116+1494
	DD	imagerel $chain$8$?UpdateColonies@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?UpdateColonies@World@@QEAAXXZ DD imagerel $LN116+1494
	DD	imagerel $LN116+1614
	DD	imagerel $chain$9$?UpdateColonies@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateCollisions@World@@QEAAXXZ DD imagerel $LN31@UpdateColl
	DD	imagerel $LN31@UpdateColl+217
	DD	imagerel $unwind$?UpdateCollisions@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateCollisionChunk@World@@QEAAXHHHH@Z DD imagerel $LN89@UpdateColl
	DD	imagerel $LN89@UpdateColl+155
	DD	imagerel $unwind$?UpdateCollisionChunk@World@@QEAAXHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?UpdateCollisionChunk@World@@QEAAXHHHH@Z DD imagerel $LN89@UpdateColl+155
	DD	imagerel $LN89@UpdateColl+421
	DD	imagerel $chain$6$?UpdateCollisionChunk@World@@QEAAXHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?UpdateCollisionChunk@World@@QEAAXHHHH@Z DD imagerel $LN89@UpdateColl+421
	DD	imagerel $LN89@UpdateColl+437
	DD	imagerel $chain$7$?UpdateCollisionChunk@World@@QEAAXHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z DD imagerel $LN55@UpdateColl
	DD	imagerel $LN55@UpdateColl+82
	DD	imagerel $unwind$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z DD imagerel $LN55@UpdateColl+82
	DD	imagerel $LN55@UpdateColl+245
	DD	imagerel $chain$4$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z DD imagerel $LN55@UpdateColl+245
	DD	imagerel $LN55@UpdateColl+254
	DD	imagerel $chain$5$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD imagerel $LN57@UpdateColl
	DD	imagerel $LN57@UpdateColl+118
	DD	imagerel $unwind$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD imagerel $LN57@UpdateColl+118
	DD	imagerel $LN57@UpdateColl+132
	DD	imagerel $chain$0$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD imagerel $LN57@UpdateColl+132
	DD	imagerel $LN57@UpdateColl+251
	DD	imagerel $chain$1$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD imagerel $LN57@UpdateColl+251
	DD	imagerel $LN57@UpdateColl+591
	DD	imagerel $chain$2$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD imagerel $LN57@UpdateColl+591
	DD	imagerel $LN57@UpdateColl+614
	DD	imagerel $chain$3$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateDeadEntities@World@@QEAAXXZ DD imagerel $LN32@UpdateDead
	DD	imagerel $LN32@UpdateDead+26
	DD	imagerel $unwind$?UpdateDeadEntities@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?UpdateDeadEntities@World@@QEAAXXZ DD imagerel $LN32@UpdateDead+26
	DD	imagerel $LN32@UpdateDead+229
	DD	imagerel $chain$0$?UpdateDeadEntities@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?UpdateDeadEntities@World@@QEAAXXZ DD imagerel $LN32@UpdateDead+229
	DD	imagerel $LN32@UpdateDead+238
	DD	imagerel $chain$1$?UpdateDeadEntities@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?UpdateDeadEntities@World@@QEAAXXZ DD imagerel $LN32@UpdateDead+238
	DD	imagerel $LN32@UpdateDead+251
	DD	imagerel $chain$2$?UpdateDeadEntities@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateSpacialHash@World@@QEAAXXZ DD imagerel $LN39@UpdateSpac
	DD	imagerel $LN39@UpdateSpac+241
	DD	imagerel $unwind$?UpdateSpacialHash@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN11@vector
	DD	imagerel $LN11@vector+45
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$array@VColonyController@@$04@std@@QEAA@XZ DD imagerel $LN6@array
	DD	imagerel $LN6@array+53
	DD	imagerel $unwind$??0?$array@VColonyController@@$04@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ChunkArray@$0DOI@@@QEAA@XZ DD imagerel $LN84@ChunkArray
	DD	imagerel $LN84@ChunkArray+102
	DD	imagerel $unwind$??0?$ChunkArray@$0DOI@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$array@VEntity@@$09@std@@QEAA@XZ DD imagerel $LN13@array
	DD	imagerel $LN13@array+69
	DD	imagerel $unwind$??0?$array@VEntity@@$09@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$SwapList@VEntity@@$09@@QEAA@XZ DD imagerel $LN15@SwapList
	DD	imagerel $LN15@SwapList+75
	DD	imagerel $unwind$??0?$SwapList@VEntity@@$09@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$array@VEntity@@$0BIGKA@@std@@QEAA@XZ DD imagerel $LN13@array
	DD	imagerel $LN13@array+69
	DD	imagerel $unwind$??0?$array@VEntity@@$0BIGKA@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$SwapList@VEntity@@$0BIGKA@@@QEAA@XZ DD imagerel $LN15@SwapList
	DD	imagerel $LN15@SwapList+75
	DD	imagerel $unwind$??0?$SwapList@VEntity@@$0BIGKA@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PrintEntityInfo@World@@QEAAXMM@Z DD imagerel $LN65@PrintEntit
	DD	imagerel $LN65@PrintEntit+135
	DD	imagerel $unwind$?PrintEntityInfo@World@@QEAAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?PrintEntityInfo@World@@QEAAXMM@Z DD imagerel $LN65@PrintEntit+135
	DD	imagerel $LN65@PrintEntit+684
	DD	imagerel $chain$1$?PrintEntityInfo@World@@QEAAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?PrintEntityInfo@World@@QEAAXMM@Z DD imagerel $LN65@PrintEntit+684
	DD	imagerel $LN65@PrintEntit+704
	DD	imagerel $chain$2$?PrintEntityInfo@World@@QEAAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@World@@QEAAXM@Z DD imagerel $LN227
	DD	imagerel $LN227+190
	DD	imagerel $unwind$?Update@World@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?Update@World@@QEAAXM@Z DD imagerel $LN227+190
	DD	imagerel $LN227+1253
	DD	imagerel $chain$10$?Update@World@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$11$?Update@World@@QEAAXM@Z DD imagerel $LN227+1253
	DD	imagerel $LN227+1310
	DD	imagerel $chain$11$?Update@World@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$12$?Update@World@@QEAAXM@Z DD imagerel $LN227+1310
	DD	imagerel $LN227+1323
	DD	imagerel $chain$12$?Update@World@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0World@@QEAA@XZ DD imagerel $LN380@World
	DD	imagerel $LN380@World+1949
	DD	imagerel $unwind$??0World@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateCollisions$omp$1@World@@QEAAXXZ DD imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ+69
	DD	imagerel $unwind$?UpdateCollisions$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?UpdateCollisions$omp$1@World@@QEAAXXZ DD imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ+69
	DD	imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ+437
	DD	imagerel $chain$5$?UpdateCollisions$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?UpdateCollisions$omp$1@World@@QEAAXXZ DD imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ+437
	DD	imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ+448
	DD	imagerel $chain$6$?UpdateCollisions$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateEntities$omp$1@World@@QEAAXXZ DD imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ+82
	DD	imagerel $unwind$?UpdateEntities$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$16$?UpdateEntities$omp$1@World@@QEAAXXZ DD imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ+82
	DD	imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ+2532
	DD	imagerel $chain$16$?UpdateEntities$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$17$?UpdateEntities$omp$1@World@@QEAAXXZ DD imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ+2532
	DD	imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ+2546
	DD	imagerel $chain$17$?UpdateEntities$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+33
	DD	imagerel $unwind$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+33
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+82
	DD	imagerel $chain$0$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+82
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+553
	DD	imagerel $chain$8$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+553
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+566
	DD	imagerel $chain$9$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+566
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+576
	DD	imagerel $chain$10$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD 021H
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+33
	DD	imagerel $unwind$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD 021H
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+33
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+82
	DD	imagerel $chain$0$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD 0104621H
	DD	047846H
	DD	056838H
	DD	0cf42fH
	DD	0de426H
	DD	0ec41aH
	DD	0f7415H
	DD	0156410H
	DD	0133408H
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+33
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+82
	DD	imagerel $chain$0$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD 020421H
	DD	0145404H
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateSpacialHash$omp$1@World@@QEAAXXZ+33
	DD	imagerel $unwind$?UpdateSpacialHash$omp$1@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateSpacialHash$omp$1@World@@QEAAXXZ DD 020c01H
	DD	0d005f20cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$17$?UpdateEntities$omp$1@World@@QEAAXXZ DD 021H
	DD	imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ+82
	DD	imagerel $unwind$?UpdateEntities$omp$1@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$16$?UpdateEntities$omp$1@World@@QEAAXXZ DD 022ea21H
	DD	01cf4eaH
	DD	01fc4d7H
	DD	04f8c3H
	DD	05e8b5H
	DD	06d8a7H
	DD	07c899H
	DD	08b88bH
	DD	09a87aH
	DD	0a9869H
	DD	0b8858H
	DD	0c7847H
	DD	0d683eH
	DD	01de432H
	DD	01ed42aH
	DD	0256422H
	DD	0245413H
	DD	0233408H
	DD	imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateEntities$omp$1@World@@QEAAXXZ+82
	DD	imagerel $unwind$?UpdateEntities$omp$1@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateEntities$omp$1@World@@QEAAXXZ DD 030901H
	DD	0200109H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?UpdateCollisions$omp$1@World@@QEAAXXZ DD 021H
	DD	imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ+69
	DD	imagerel $unwind$?UpdateCollisions$omp$1@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?UpdateCollisions$omp$1@World@@QEAAXXZ DD 0c2621H
	DD	08f426H
	DD	09e421H
	DD	0ad41cH
	DD	011c417H
	DD	010740fH
	DD	0f6405H
	DD	imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ
	DD	imagerel ?UpdateCollisions$omp$1@World@@QEAAXXZ+69
	DD	imagerel $unwind$?UpdateCollisions$omp$1@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateCollisions$omp$1@World@@QEAAXXZ DD 030701H
	DD	05003a207H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0World@@QEAA@XZ DD imagerel ??0World@@QEAA@XZ+350
	DD	0ffffffffH
	DD	imagerel ??0World@@QEAA@XZ+531
	DD	01H
	DD	imagerel ??0World@@QEAA@XZ+663
	DD	02H
	DD	imagerel ??0World@@QEAA@XZ+714
	DD	03H
	DD	imagerel ??0World@@QEAA@XZ+1831
	DD	0ffffffffH
	DD	imagerel ??0World@@QEAA@XZ+1942
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0World@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0World@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel __std_terminate
	DD	00H
	DD	imagerel ?dtor$1@?0???0World@@QEAA@XZ@4HA
	DD	02H
	DD	imagerel ?dtor$2@?0???0World@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0World@@QEAA@XZ DQ 00000000419930522r ; 8.69997e-314
	DD	imagerel $stateUnwindMap$??0World@@QEAA@XZ
	DQ	00000000000000000r		; 0
	DD	06H
	DD	imagerel $ip2state$??0World@@QEAA@XZ
	DQ	00000000000000060r		; 4.74303e-322
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0World@@QEAA@XZ DD 01f7919H
	DD	01fe868H
	DD	020d860H
	DD	021c858H
	DD	022b850H
	DD	023a848H
	DD	0249843H
	DD	025883eH
	DD	0267839H
	DD	0276834H
	DD	059742fH
	DD	058642bH
	DD	0573427H
	DD	050011aH
	DD	0e00af00cH
	DD	0c006d008H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??0World@@QEAA@XZ
	DD	01e2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$12$?Update@World@@QEAAXM@Z DD 0160021H
	DD	0bf800H
	DD	0ce800H
	DD	0ec800H
	DD	0fb800H
	DD	010a800H
	DD	0128800H
	DD	0146800H
	DD	02af400H
	DD	02be400H
	DD	0327400H
	DD	0313400H
	DD	imagerel $LN227
	DD	imagerel $LN227+190
	DD	imagerel $unwind$?Update@World@@QEAAXM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$11$?Update@World@@QEAAXM@Z DD 021H
	DD	imagerel $LN227
	DD	imagerel $LN227+190
	DD	imagerel $unwind$?Update@World@@QEAAXM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?Update@World@@QEAAXM@Z DD 0166e21H
	DD	0bf86eH
	DD	0ce85dH
	DD	0ec84cH
	DD	0fb83bH
	DD	010a82aH
	DD	012881cH
	DD	0146816H
	DD	02af410H
	DD	02be40cH
	DD	0327408H
	DD	0313404H
	DD	imagerel $LN227
	DD	imagerel $LN227+190
	DD	imagerel $unwind$?Update@World@@QEAAXM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@World@@QEAAXM@Z DD 0b3619H
	DD	0dd824H
	DD	011981bH
	DD	0137815H
	DD	02c010fH
	DD	0c006d008H
	DD	06004H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?PrintEntityInfo@World@@QEAAXMM@Z DD 021H
	DD	imagerel $LN65@PrintEntit
	DD	imagerel $LN65@PrintEntit+135
	DD	imagerel $unwind$?PrintEntityInfo@World@@QEAAXMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?PrintEntityInfo@World@@QEAAXMM@Z DD 040a21H
	DD	08e40aH
	DD	093405H
	DD	imagerel $LN65@PrintEntit
	DD	imagerel $LN65@PrintEntit+135
	DD	imagerel $unwind$?PrintEntityInfo@World@@QEAAXMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PrintEntityInfo@World@@QEAAXMM@Z DD 083f01H
	DD	02783fH
	DD	036834H
	DD	070049208H
	DD	050026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$SwapList@VEntity@@$0BIGKA@@@QEAA@XZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$array@VEntity@@$0BIGKA@@std@@QEAA@XZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$SwapList@VEntity@@$09@@QEAA@XZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$array@VEntity@@$09@std@@QEAA@XZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$ChunkArray@$0DOI@@@QEAA@XZ DD imagerel ??0?$ChunkArray@$0DOI@@@QEAA@XZ+36
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$ChunkArray@$0DOI@@@QEAA@XZ DQ 00000000019930522r ; 2.11987e-315
	DQ	00000000000000000r		; 0
	DQ	00000000100000000r		; 2.122e-314
	DD	imagerel $ip2state$??0?$ChunkArray@$0DOI@@@QEAA@XZ
	DQ	00000000000000020r		; 1.58101e-322
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ChunkArray@$0DOI@@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$ChunkArray@$0DOI@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$array@VColonyController@@$04@std@@QEAA@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateSpacialHash@World@@QEAAXXZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?UpdateDeadEntities@World@@QEAAXXZ DD 020021H
	DD	067400H
	DD	imagerel $LN32@UpdateDead
	DD	imagerel $LN32@UpdateDead+26
	DD	imagerel $unwind$?UpdateDeadEntities@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?UpdateDeadEntities@World@@QEAAXXZ DD 021H
	DD	imagerel $LN32@UpdateDead
	DD	imagerel $LN32@UpdateDead+26
	DD	imagerel $unwind$?UpdateDeadEntities@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?UpdateDeadEntities@World@@QEAAXXZ DD 020521H
	DD	067405H
	DD	imagerel $LN32@UpdateDead
	DD	imagerel $LN32@UpdateDead+26
	DD	imagerel $unwind$?UpdateDeadEntities@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateDeadEntities@World@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD 021H
	DD	imagerel $LN57@UpdateColl
	DD	imagerel $LN57@UpdateColl+118
	DD	imagerel $unwind$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD 021H
	DD	imagerel $LN57@UpdateColl+118
	DD	imagerel $LN57@UpdateColl+132
	DD	imagerel $chain$0$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD 020621H
	DD	047806H
	DD	imagerel $LN57@UpdateColl+118
	DD	imagerel $LN57@UpdateColl+132
	DD	imagerel $chain$0$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD 020621H
	DD	056806H
	DD	imagerel $LN57@UpdateColl
	DD	imagerel $LN57@UpdateColl+118
	DD	imagerel $unwind$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateCollisionEntities@World@@QEAAXAEAVEntity@@0@Z DD 082f01H
	DD	02982fH
	DD	038820H
	DD	0e340aH
	DD	07006b20aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z DD 021H
	DD	imagerel $LN55@UpdateColl
	DD	imagerel $LN55@UpdateColl+82
	DD	imagerel $unwind$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z DD 0a2321H
	DD	04e423H
	DD	05741eH
	DD	066414H
	DD	07540aH
	DD	083405H
	DD	imagerel $LN55@UpdateColl
	DD	imagerel $LN55@UpdateColl+82
	DD	imagerel $unwind$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateCollisionSingleChunk@World@@QEAAXHH@Z DD 030801H
	DD	0f0048208H
	DD	0c002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?UpdateCollisionChunk@World@@QEAAXHHHH@Z DD 021H
	DD	imagerel $LN89@UpdateColl
	DD	imagerel $LN89@UpdateColl+155
	DD	imagerel $unwind$?UpdateCollisionChunk@World@@QEAAXHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?UpdateCollisionChunk@World@@QEAAXHHHH@Z DD 0e3f21H
	DD	02983fH
	DD	038835H
	DD	047827H
	DD	056819H
	DD	0dc40fH
	DD	0e740aH
	DD	0f6405H
	DD	imagerel $LN89@UpdateColl
	DD	imagerel $LN89@UpdateColl+155
	DD	imagerel $unwind$?UpdateCollisionChunk@World@@QEAAXHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateCollisionChunk@World@@QEAAXHHHH@Z DD 061001H
	DD	0f009f210H
	DD	0d005e007H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateCollisions@World@@QEAAXXZ DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?UpdateColonies@World@@QEAAXXZ DD 021H
	DD	imagerel $LN116
	DD	imagerel $LN116+85
	DD	imagerel $unwind$?UpdateColonies@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?UpdateColonies@World@@QEAAXXZ DD 0126f21H
	DD	0a686fH
	DD	05b85eH
	DD	06a850H
	DD	079842H
	DD	088834H
	DD	09782bH
	DD	016c41fH
	DD	01e7417H
	DD	01d5408H
	DD	imagerel $LN116
	DD	imagerel $LN116+85
	DD	imagerel $unwind$?UpdateColonies@World@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateColonies@World@@QEAAXXZ DD 060e01H
	DD	017010eH
	DD	0e005f007H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateEntities@World@@QEAAXXZ DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QEAA@_KAEBV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveParticle@?$SwapList@VEntity@@$0BIGKA@@@QEAAXH@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@QEAA@_KAEBV?$allocator@VChunk@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z DD 021H
	DD	imagerel $LN176@Emplace_re
	DD	imagerel $LN176@Emplace_re+70
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z DD 060021H
	DD	04f400H
	DD	0d5400H
	DD	0c3400H
	DD	imagerel $LN176@Emplace_re
	DD	imagerel $LN176@Emplace_re+70
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z DD 063821H
	DD	0c3438H
	DD	04f415H
	DD	0d5405H
	DD	imagerel $LN176@Emplace_re
	DD	imagerel $LN176@Emplace_re+70
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z DD 050b01H
	DD	0e007420bH
	DD	07003c005H
	DD	06002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ufill@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAPEAV?$vector@MV?$allocator@M@std@@@2@PEAV32@_KU_Value_init_tag@2@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@MV?$allocator@M@std@@@std@@AEAAPEAMPEAM00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEAAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@VChunk@@V?$allocator@VChunk@@@std@@@std@@AEAAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@VChunk@@@std@@QEAAPEAVChunk@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@YAPEAV?$vector@MV?$allocator@M@std@@@0@PEAV10@_KAEAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@VChunk@@@std@@@std@@YAPEAVChunk@@PEAV1@_KAEAV?$allocator@VChunk@@@0@@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@VChunk@@@std@@@std@@QEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VChunk@@$$V@?$_Default_allocator_traits@V?$allocator@VChunk@@@std@@@std@@SAXAEAV?$allocator@VChunk@@@1@QEAVChunk@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File D:\Github\Anterminator\glm\glm\detail\type_vec2.inl
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\xutility
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\numeric
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\vector
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\vector
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
;	COMDAT ?Update@World@@QEAAXM@Z
_TEXT	SEGMENT
$T51 = 32
$T52 = 36
e$65 = 48
__$ArrayPad$ = 160
this$ = 384
realdt$ = 392
?Update@World@@QEAAXM@Z PROC				; World::Update, COMDAT

; 37   : {

$LN227:
	mov	r11, rsp
	push	rsi
	push	r12
	push	r13
	sub	rsp, 352				; 00000160H
	vmovaps	XMMWORD PTR [r11-72], xmm7
	vmovaps	XMMWORD PTR [r11-104], xmm9
	vmovaps	XMMWORD PTR [r11-168], xmm13
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 39   : 	TimeCollisions = 0;
; 40   : 	TimeUpdateEntity = 0;
; 41   : 	TimeUpdateColonies = 0;
; 42   : 	DtAccumulator += realdt * TimeScalingFactor;

	vmovss	xmm0, DWORD PTR [rcx+10184]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4492 :     if (_Right < _Left) {

	vmovss	xmm13, DWORD PTR __real@3f800000
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 43   : 	int dtstepcount = std::min(500, static_cast<int>(DtAccumulator / this->DeltaTime));

	vmovss	xmm9, DWORD PTR __real@42c80000

; 44   : 	DtAccumulator -= this->DeltaTime * static_cast<float>(dtstepcount);

	vmovss	xmm7, DWORD PTR __real@3c23d70a
	vmovaps	xmm2, xmm1
	vfmadd213ss xmm2, xmm0, DWORD PTR [rcx+8]
	vmulss	xmm0, xmm2, xmm9
	vcvttss2si eax, xmm0
	vxorps	xmm0, xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4492 :     if (_Right < _Left) {

	mov	r13d, 500				; 000001f4H
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 38   : 	TimeSpacialHash = 0;

	mov	QWORD PTR [rcx+10188], 0

; 43   : 	int dtstepcount = std::min(500, static_cast<int>(DtAccumulator / this->DeltaTime));

	cmp	eax, r13d
	mov	QWORD PTR [rcx+10196], 0

; 44   : 	DtAccumulator -= this->DeltaTime * static_cast<float>(dtstepcount);

	vmovaps	xmm1, xmm7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4492 :     if (_Right < _Left) {

	cmovl	r13d, eax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 37   : {

	mov	rsi, rcx

; 44   : 	DtAccumulator -= this->DeltaTime * static_cast<float>(dtstepcount);

	vcvtsi2ss xmm0, xmm0, r13d
	vfnmadd213ss xmm1, xmm0, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4492 :     if (_Right < _Left) {

	vcmpltss xmm0, xmm1, xmm13
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 46   : 	for (int i = 0; i < dtstepcount;++i)

	xor	r12d, r12d
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4492 :     if (_Right < _Left) {

	vblendvps xmm0, xmm13, xmm1, xmm0
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 45   : 	DtAccumulator = std::min(this->DeltaTime * 100, DtAccumulator);

	vmovss	DWORD PTR [rcx+8], xmm0

; 46   : 	for (int i = 0; i < dtstepcount;++i)

	test	r13d, r13d
	jle	$LN212@Update
	mov	QWORD PTR [r11+16], rbx
	mov	QWORD PTR [r11+24], rdi
	mov	QWORD PTR [r11-32], r14
	mov	QWORD PTR [r11-40], r15
	vmovaps	XMMWORD PTR [r11-56], xmm6
	vmovaps	XMMWORD PTR [r11-88], xmm8
	vmovss	xmm8, DWORD PTR __real@41200000
	vmovaps	XMMWORD PTR [r11-120], xmm10
	vmovss	xmm10, DWORD PTR __real@42480000
	vmovaps	XMMWORD PTR [r11-136], xmm11
	vmovss	xmm11, DWORD PTR __real@447a0000
	vmovaps	XMMWORD PTR [r11-152], xmm12
	vmovss	xmm12, DWORD PTR __real@48f42400
	vmovaps	XMMWORD PTR [r11-184], xmm14
	vmovss	xmm14, DWORD PTR __real@3d4ccccd
	vmovaps	XMMWORD PTR [r11-200], xmm15
	vmovss	xmm15, DWORD PTR __real@43480000
	vxorps	xmm6, xmm6, xmm6
	npad	8
$LL4@Update:

; 47   : 	{
; 48   : 		ElapsedTime += this->DeltaTime;

	vaddss	xmm1, xmm7, DWORD PTR [rsi+10180]
	vmovss	DWORD PTR [rsi+10180], xmm1

; 49   : 		UpdateColonies();

	mov	rcx, rsi
	vzeroupper
	call	?UpdateColonies@World@@QEAAXXZ		; World::UpdateColonies

; 50   : 		UpdateEntities();

	mov	rcx, rsi
	call	?UpdateEntities@World@@QEAAXXZ		; World::UpdateEntities

; 51   : 		UpdateSpacialHash();

	mov	rcx, rsi
	call	?UpdateSpacialHash@World@@QEAAXXZ	; World::UpdateSpacialHash

; 52   : 		UpdateCollisions();

	mov	rcx, rsi
	call	?UpdateCollisions@World@@QEAAXXZ	; World::UpdateCollisions

; 128  : 	for (int i = 0; i < EntityList.ParticleCount; ++i)

	xor	r8d, r8d
	xor	r11d, r11d
	cmp	DWORD PTR [rsi+10010204], r8d
	jle	$LN211@Update

; 47   : 	{
; 48   : 		ElapsedTime += this->DeltaTime;

	lea	r10, QWORD PTR [rsi+10240]
	lea	r9, QWORD PTR [rsi+10238]
$LL74@Update:

; 131  : 		if (e.ToRemove)

	cmp	BYTE PTR [r9], 0
	je	$LN72@Update

; 132  : 		{
; 133  : 			AffiliationCounter[e.Affiliation + 1]--;

	movsxd	rax, DWORD PTR [r10]

; 134  : 			EntityList.RemoveParticle(i--);

	mov	edx, r8d
	mov	rbx, r11
	dec	r8d
	dec	r11
	sub	r9, 100					; 00000064H
	sub	r10, 100				; 00000064H
	dec	DWORD PTR [rsi+rax*4+10065100]
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h

; 30   : 		if (position == ParticleCount - 1)

	movsxd	rax, DWORD PTR [rsi+10010204]
	lea	ecx, DWORD PTR [rax-1]
	cmp	edx, ecx
	jne	SHORT $LN84@Update

; 31   : 		{
; 32   : 			ParticleCount--;

	mov	DWORD PTR [rsi+10010204], ecx

; 33   : 			return;

	jmp	SHORT $LN72@Update
$LN84@Update:

; 34   : 		}
; 35   : 		if (position < ParticleCount)

	cmp	edx, eax
	jge	$LN85@Update

; 37   : 			ParticleList[position] = ParticleList[ParticleCount-- - 1];

	mov	DWORD PTR [rsi+10010204], ecx
	imul	rcx, rax, 100				; 00000064H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	imul	rax, rbx, 100				; 00000064H
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h

; 37   : 			ParticleList[position] = ParticleList[ParticleCount-- - 1];

	vmovups	ymm0, YMMWORD PTR [rcx+rsi+10104]
	vmovups	ymm1, YMMWORD PTR [rcx+rsi+10136]
	vmovups	ymm2, YMMWORD PTR [rcx+rsi+10168]
	mov	edx, DWORD PTR [rcx+rsi+10200]
	vmovups	YMMWORD PTR [rax+rsi+10204], ymm0
	vmovups	YMMWORD PTR [rax+rsi+10236], ymm1
	vmovups	YMMWORD PTR [rax+rsi+10268], ymm2
	mov	DWORD PTR [rax+rsi+10300], edx
$LN72@Update:
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 128  : 	for (int i = 0; i < EntityList.ParticleCount; ++i)

	inc	r8d
	inc	r11
	add	r9, 100					; 00000064H
	add	r10, 100				; 00000064H
	cmp	r8d, DWORD PTR [rsi+10010204]
	jl	$LL74@Update
$LN211@Update:

; 53   : 		UpdateDeadEntities();
; 54   : 		FoodCounter += this->DeltaTime;

	vaddss	xmm1, xmm7, DWORD PTR [rsi+10011244]

; 55   : 		if (FoodCounter > 10 * FoodDecrement)

	vmovss	xmm2, DWORD PTR [rsi+10011248]
	vmulss	xmm0, xmm2, xmm8
	vcomiss	xmm1, xmm0
	vmovss	DWORD PTR [rsi+10011244], xmm1
	jbe	$LN105@Update

; 56   : 		{
; 57   : 			FoodDecrement++;
; 58   : 			FoodCounter = 0;
; 59   : 			Entity e = Entity();

	xor	eax, eax
	mov	DWORD PTR [rsi+10011244], 0
	vaddss	xmm0, xmm2, xmm13
	vmovss	DWORD PTR [rsi+10011248], xmm0
	vmovss	xmm0, DWORD PTR __real@42700000
	vmovss	DWORD PTR e$65[rsp+44], xmm0
	vmovss	DWORD PTR e$65[rsp+8], xmm14
	vmovss	DWORD PTR e$65[rsp+12], xmm10
	vmovss	DWORD PTR e$65[rsp+24], xmm15
	vmovss	DWORD PTR e$65[rsp+40], xmm6
	vmovss	DWORD PTR e$65[rsp+48], xmm6
	vmovss	DWORD PTR e$65[rsp+52], xmm6
	vmovss	DWORD PTR e$65[rsp+60], xmm6
	vmovss	DWORD PTR e$65[rsp+64], xmm9
	mov	DWORD PTR e$65[rsp+32], eax

; 60   : 			e.Position.x = random_number(generator) * WorldSize;

	lea	rdx, QWORD PTR [rsi+16]
	mov	WORD PTR e$65[rsp+57], ax
	lea	rcx, QWORD PTR [rsi+5016]
	mov	BYTE PTR e$65[rsp+59], al
	mov	BYTE PTR e$65[rsp+56], al
; File D:\Github\Anterminator\glm\glm\detail\type_vec2.inl

; 53   : 		: x(static_cast<T>(_x))

	vmovups	XMMWORD PTR e$65[rsp+84], xmm6
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 60   : 			e.Position.x = random_number(generator) * WorldSize;

	vzeroupper
	call	??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@M@std@@QEBAMAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ; std::uniform_real<float>::operator()<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
	vmulss	xmm1, xmm0, xmm11

; 61   : 			e.Position.y = random_number(generator) * WorldSize;

	lea	rdx, QWORD PTR [rsi+16]
	lea	rcx, QWORD PTR [rsi+5016]
	vmovss	DWORD PTR e$65[rsp+68], xmm1
	call	??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@M@std@@QEBAMAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ; std::uniform_real<float>::operator()<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
	vmulss	xmm1, xmm0, xmm11

; 62   : 			e.OldPosition = e.Position;
; 63   : 			e.Size = 50;
; 64   : 			e.Mass = 500;

	vmovss	xmm0, DWORD PTR __real@43fa0000
	vmovss	DWORD PTR e$65[rsp+72], xmm1
	mov	rax, QWORD PTR e$65[rsp+68]
	mov	QWORD PTR e$65[rsp+76], rax
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h

; 20   : 		if (ParticleCount != MaxParticlesPerElement)

	movsxd	rax, DWORD PTR [rsi+10010204]
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 68   : 			e.Affiliation = -1;

	mov	DWORD PTR e$65[rsp+36], -1
	vmovss	DWORD PTR e$65[rsp+28], xmm10
	vmovss	DWORD PTR e$65[rsp], xmm0
	vmovss	DWORD PTR e$65[rsp+16], xmm12
	vmovss	DWORD PTR e$65[rsp+20], xmm12
	vmovss	DWORD PTR e$65[rsp+4], xmm9
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h

; 20   : 		if (ParticleCount != MaxParticlesPerElement)

	cmp	eax, 100000				; 000186a0H
	je	SHORT $LN105@Update

; 22   : 			ParticleList[ParticleCount++] = add;

	vmovups	ymm0, YMMWORD PTR e$65[rsp]
	vmovups	ymm1, YMMWORD PTR e$65[rsp+32]
	mov	rcx, rax
	inc	eax
	mov	DWORD PTR [rsi+10010204], eax
	mov	eax, DWORD PTR e$65[rsp+96]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	imul	rdx, rcx, 100				; 00000064H
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h

; 22   : 			ParticleList[ParticleCount++] = add;

	vmovups	YMMWORD PTR [rdx+rsi+10204], ymm0
	vmovups	ymm0, YMMWORD PTR e$65[rsp+64]
	vmovups	YMMWORD PTR [rdx+rsi+10236], ymm1
	vmovups	YMMWORD PTR [rdx+rsi+10268], ymm0
	mov	DWORD PTR [rdx+rsi+10300], eax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 432  : 		AffiliationCounter[e.Affiliation + 1]++;

	inc	DWORD PTR [rsi+10065096]
$LN105@Update:

; 69   : 			AddEntity(e);
; 70   : 		}
; 71   : 		if (GraphSampleCounter++ == 100)

	mov	ecx, DWORD PTR [rsi+12]
	lea	eax, DWORD PTR [rcx+1]
	mov	DWORD PTR [rsi+12], eax
	cmp	ecx, 100				; 00000064H
	jne	$LN2@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\xutility

; 1229 :     _CONSTEXPR17 explicit _Array_const_iterator(pointer _Parg, size_t _Off = 0) : _Ptr(_Parg + _Off) {}

	lea	r15, QWORD PTR [rsi+10065120]
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 73   : 			GraphSampleCounter = 0;

	mov	DWORD PTR [rsi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\xutility

; 1229 :     _CONSTEXPR17 explicit _Array_const_iterator(pointer _Parg, size_t _Off = 0) : _Ptr(_Parg + _Off) {}

	lea	rax, QWORD PTR [rsi+10065100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\numeric

; 23   :     for (; _UFirst != _ULast; ++_UFirst) {

	xor	ecx, ecx
	cmp	rax, r15
	je	SHORT $LN134@Update
	npad	4
$LL197@Update:

; 24   :         _Val = _Reduce_op(_Val, *_UFirst);

	add	ecx, DWORD PTR [rax]
	add	rax, 4
	cmp	rax, r15
	jne	SHORT $LL197@Update
$LN134@Update:
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 74   : 			if (std::accumulate(++AffiliationCounter.begin(),AffiliationCounter.end(), 0) != 0)

	test	ecx, ecx
	je	$LN2@Update

; 76   : 				for (int c = 0; c < AntColonyMax; ++c)

	xor	ebx, ebx
	lea	rdi, QWORD PTR [rsi+10016400]
	lea	r14, QWORD PTR [rsi+10065100]
	npad	13
$LL7@Update:

; 79   : 					AntCountHistory[c].push_back(std::max(0.0f,ColonyArray[c].TotalEnergy + (AffiliationCounter[c+1] * 100)));

	imul	eax, DWORD PTR [r14], 100		; 00000064H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4460 :     if (_Left < _Right) {

	lea	r8, QWORD PTR $T51[rsp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\vector

; 1468 :         return _My_data._Myfirst[_Pos];

	mov	rcx, QWORD PTR [r15]
	add	rcx, rbx
	vxorps	xmm0, xmm0, xmm0
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 79   : 					AntCountHistory[c].push_back(std::max(0.0f,ColonyArray[c].TotalEnergy + (AffiliationCounter[c+1] * 100)));

	vmovss	DWORD PTR $T52[rsp], xmm6
	vcvtsi2ss xmm0, xmm0, eax
	vaddss	xmm1, xmm0, DWORD PTR [rdi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\vector

; 657  :         if (_Mylast != _My_data._Myend) {

	mov	rdx, QWORD PTR [rcx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4460 :     if (_Left < _Right) {

	lea	rax, QWORD PTR $T52[rsp]
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 79   : 					AntCountHistory[c].push_back(std::max(0.0f,ColonyArray[c].TotalEnergy + (AffiliationCounter[c+1] * 100)));

	vcomiss	xmm1, xmm6
	vmovss	DWORD PTR $T51[rsp], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4460 :     if (_Left < _Right) {

	cmovbe	r8, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\vector

; 657  :         if (_Mylast != _My_data._Myend) {

	cmp	rdx, QWORD PTR [rcx+16]
	je	SHORT $LN165@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\xmemory

; 760  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	mov	eax, DWORD PTR [r8]
	mov	DWORD PTR [rdx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\vector

; 643  :         ++_Mylast;

	lea	rax, QWORD PTR [rdx+4]
	mov	QWORD PTR [rcx+8], rax

; 658  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN5@Update
$LN165@Update:

; 659  :         }
; 660  : 
; 661  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	vzeroupper
	call	??$_Emplace_reallocate@AEBM@?$vector@MV?$allocator@M@std@@@std@@QEAAPEAMQEAMAEBM@Z ; std::vector<float,std::allocator<float> >::_Emplace_reallocate<float const &>
$LN5@Update:
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 76   : 				for (int c = 0; c < AntColonyMax; ++c)

	add	r14, 4
	add	rbx, 24
	add	rdi, 10768				; 00002a10H
	cmp	rbx, 120				; 00000078H
	jl	SHORT $LL7@Update
$LN2@Update:

; 46   : 	for (int i = 0; i < dtstepcount;++i)

	inc	r12d
	cmp	r12d, r13d
	jl	$LL4@Update
	vmovaps	xmm14, XMMWORD PTR [rsp+192]
	vmovaps	xmm12, XMMWORD PTR [rsp+224]
	vmovaps	xmm11, XMMWORD PTR [rsp+240]
	vmovaps	xmm10, XMMWORD PTR [rsp+256]
	vmovaps	xmm8, XMMWORD PTR [rsp+288]
	vmovaps	xmm6, XMMWORD PTR [rsp+320]
	mov	r15, QWORD PTR [rsp+336]
	mov	r14, QWORD PTR [rsp+344]
	mov	rdi, QWORD PTR [rsp+400]
	mov	rbx, QWORD PTR [rsp+392]
	vmovaps	xmm15, XMMWORD PTR [rsp+176]
$LN212@Update:
	vzeroupper

; 84   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+352]
	vmovaps	xmm7, XMMWORD PTR [r11-48]
	vmovaps	xmm9, XMMWORD PTR [r11-80]
	vmovaps	xmm13, XMMWORD PTR [r11-144]
	mov	rsp, r11
	pop	r13
	pop	r12
	pop	rsi
	ret	0
$LN85@Update:
; File D:\Github\Anterminator\Anterminator\AntSim\SwapList.h

; 40   : 			throw;

	xor	edx, edx
	xor	ecx, ecx
	vzeroupper
	call	_CxxThrowException
	int	3
$LN224@Update:
?Update@World@@QEAAXM@Z ENDP				; World::Update
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File D:\Github\Anterminator\Anterminator\AntSim\ColonyController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\cmath
; File D:\Github\Anterminator\Anterminator\AntSim\ColonyController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\cmath
; File D:\Github\Anterminator\Anterminator\AntSim\ColonyController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\cmath
; File D:\Github\Anterminator\Anterminator\AntSim\ColonyController.cpp
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\xstring
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp
;	COMDAT ?UpdateColonies@World@@QEAAXXZ
_TEXT	SEGMENT
$T20 = 32
this$ = 224
?UpdateColonies@World@@QEAAXXZ PROC			; World::UpdateColonies, COMDAT

; 255  : {

$LN116:
	push	rbx
	push	rsi
	push	r14
	push	r15
	sub	rsp, 184				; 000000b8H
	mov	rsi, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono

; 571  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

	call	QWORD PTR __imp__Query_perf_frequency
	mov	rbx, rax

; 572  :             const long long _Ctr  = _Query_perf_counter();

	call	QWORD PTR __imp__Query_perf_counter

; 575  :             const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

	cdq
	idiv	rbx
	mov	r8, rax
	imul	rax, rdx, 1000000000			; 3b9aca00H
	imul	r15, r8, 1000000000			; 3b9aca00H
	cdq
	idiv	rbx
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 257  : 	for (auto& c : ColonyArray)

	lea	rbx, QWORD PTR [rsi+10011256]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono

; 576  :             return time_point(duration(_Whole + _Part));

	add	r15, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 108  :         return _Elems + _Size;

	lea	r14, QWORD PTR [rbx+53840]
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 257  : 	for (auto& c : ColonyArray)

	cmp	rbx, r14
	je	$LN3@UpdateColo

; 255  : {

	mov	QWORD PTR [rsp+232], rbp
	add	rbx, 5280				; 000014a0H
	mov	QWORD PTR [rsp+240], rdi
	mov	QWORD PTR [rsp+176], r12
	xor	r12d, r12d
	vmovaps	XMMWORD PTR [rsp+144], xmm7
	vmovaps	XMMWORD PTR [rsp+128], xmm8
	vmovss	xmm8, DWORD PTR __real@3c23d70a
	vmovaps	XMMWORD PTR [rsp+112], xmm9
	vmovss	xmm9, DWORD PTR __real@3f800000
	vmovaps	XMMWORD PTR [rsp+96], xmm10
	vmovss	xmm10, DWORD PTR __real@3f000000
	vmovaps	XMMWORD PTR [rsp+80], xmm11
	vmovsd	xmm11, QWORD PTR __real@3f847ae147ae147b
	vmovaps	XMMWORD PTR [rsp+160], xmm6
	vxorps	xmm7, xmm7, xmm7
	npad	8
$LL4@UpdateColo:

; 258  : 	{
; 259  : 		if (c.ColonyAlive)

	cmp	BYTE PTR [rbx-232], r12b
	je	$LN2@UpdateColo
; File D:\Github\Anterminator\Anterminator\AntSim\ColonyController.cpp

; 83   : 	Pheremone_Home.Update(world.DeltaTime);

	lea	rcx, QWORD PTR [rbx-128]
	call	?Update@PheremoneGrid@@QEAAXM@Z		; PheremoneGrid::Update

; 84   : 	Pheremone_Food.Update(world.DeltaTime);

	mov	rcx, rbx
	call	?Update@PheremoneGrid@@QEAAXM@Z		; PheremoneGrid::Update

; 85   : 	Pheremone_Density.Update(world.DeltaTime);

	lea	rcx, QWORD PTR [rbx+256]
	call	?Update@PheremoneGrid@@QEAAXM@Z		; PheremoneGrid::Update

; 86   : 	Pheremone_Killed.Update(world.DeltaTime);

	lea	rcx, QWORD PTR [rbx+128]
	call	?Update@PheremoneGrid@@QEAAXM@Z		; PheremoneGrid::Update

; 87   : 	TotalEnergy -= EnergyCost * world.DeltaTime;

	vmovss	xmm2, DWORD PTR [rbx-240]
	vmovaps	xmm1, xmm8
	vfnmadd213ss xmm1, xmm2, DWORD PTR [rbx-136]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\algorithm

; 4460 :     if (_Left < _Right) {

	vcmpltss xmm0, xmm7, xmm1
	vblendvps xmm0, xmm7, xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\cmath

; 195  :     return _CSTD powf(_Xx, _Yx);

	vmovss	xmm1, DWORD PTR [rbx-252]
; File D:\Github\Anterminator\Anterminator\AntSim\ColonyController.cpp

; 88   : 	TotalEnergy = std::max(0.0f, TotalEnergy);

	vmovss	DWORD PTR [rbx-136], xmm0

; 90   : 	int SpawnCount = ((random_number(generator) + 1.0) / 2.0) * this->AntCreation * world.DeltaTime * std::pow(TotalEnergy / EnergyCost, AntCreationEnergyFactor);

	vdivss	xmm0, xmm0, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\cmath

; 195  :     return _CSTD powf(_Xx, _Yx);

	call	powf
; File D:\Github\Anterminator\Anterminator\AntSim\ColonyController.cpp

; 90   : 	int SpawnCount = ((random_number(generator) + 1.0) / 2.0) * this->AntCreation * world.DeltaTime * std::pow(TotalEnergy / EnergyCost, AntCreationEnergyFactor);

	lea	rcx, QWORD PTR [rbx-280]
	lea	rdx, QWORD PTR [rbx-5280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\cmath

; 195  :     return _CSTD powf(_Xx, _Yx);

	vmovaps	xmm6, xmm0
; File D:\Github\Anterminator\Anterminator\AntSim\ColonyController.cpp

; 90   : 	int SpawnCount = ((random_number(generator) + 1.0) / 2.0) * this->AntCreation * world.DeltaTime * std::pow(TotalEnergy / EnergyCost, AntCreationEnergyFactor);

	call	??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@M@std@@QEBAMAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ; std::uniform_real<float>::operator()<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
	vaddss	xmm1, xmm0, xmm9
	vmulss	xmm2, xmm1, xmm10
	vmulss	xmm2, xmm2, DWORD PTR [rbx-256]
	vcvtss2sd xmm1, xmm2, xmm2
	vmulsd	xmm3, xmm1, xmm11
	vcvtss2sd xmm0, xmm6, xmm6
	vmulsd	xmm2, xmm3, xmm0
	vcvttsd2si eax, xmm2

; 91   : 	for (int i = 0; i < SpawnCount; ++i)

	test	eax, eax
	jle	SHORT $LN25@UpdateColo

; 88   : 	TotalEnergy = std::max(0.0f, TotalEnergy);

	mov	edi, eax
	npad	12
$LL26@UpdateColo:

; 92   : 	{
; 93   : 		if (TotalEnergy > EnergyCost)

	vmovss	xmm0, DWORD PTR [rbx-240]
	vcomiss	xmm0, DWORD PTR [rbx-136]
	jae	SHORT $LN24@UpdateColo

; 94   : 		{
; 95   : 			AddAnt(world);

	mov	rdx, rsi
	lea	rcx, QWORD PTR [rbx-5280]
	call	?AddAnt@ColonyController@@QEAAXAEAVWorld@@@Z ; ColonyController::AddAnt
$LN24@UpdateColo:

; 91   : 	for (int i = 0; i < SpawnCount; ++i)

	sub	rdi, 1
	jne	SHORT $LL26@UpdateColo
$LN25@UpdateColo:
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 263  : 		if (c.ColonyAlive && c.TotalEnergy <= 0 && AffiliationCounter[c.Affiliation + 1] == 0) {

	cmp	BYTE PTR [rbx-232], r12b
	je	$LN2@UpdateColo
	vcomiss	xmm7, DWORD PTR [rbx-136]
	jb	$LN2@UpdateColo
	movsxd	rax, DWORD PTR [rbx-228]
	cmp	DWORD PTR [rsi+rax*4+10065100], r12d
	jne	$LN2@UpdateColo

; 264  : 			c.ColonyAlive = false;

	mov	BYTE PTR [rbx-232], r12b

; 265  : 			--AntColonyCount;
; 266  : 			std::cout << "Colony " << c.Affiliation << " died\n";

	lea	rdx, OFFSET FLAT:??_C@_07DBDIABGE@Colony?5@
	dec	DWORD PTR [rsi+10011252]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	edx, DWORD PTR [rbx-228]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_06BDKAMNCK@?5died?6@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ecx, 12
	npad	6
$LL7@UpdateColo:

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+184]
	mov	DWORD PTR [rcx+rax-12], r12d

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+312]
	mov	DWORD PTR [rcx+rax-12], r12d

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx-104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8-72]
	mov	DWORD PTR [rcx+rax-12], r12d

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+56]
	mov	DWORD PTR [rcx+rax-12], r12d
	movsxd	rax, DWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+184]
	mov	DWORD PTR [rax+rcx-8], r12d

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+312]
	mov	DWORD PTR [rax+rcx-8], r12d

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx-104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8-72]
	mov	DWORD PTR [rax+rcx-8], r12d

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+56]
	mov	DWORD PTR [rax+rcx-8], r12d
	movsxd	rax, DWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+184]
	mov	DWORD PTR [rcx+rax-4], r12d

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+312]
	mov	DWORD PTR [rcx+rax-4], r12d

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx-104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8-72]
	mov	DWORD PTR [rcx+rax-4], r12d

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+56]
	mov	DWORD PTR [rcx+rax-4], r12d
	movsxd	rax, DWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+184]
	mov	DWORD PTR [rcx+rax], r12d

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+312]
	mov	DWORD PTR [rcx+rax], r12d

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx-104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8-72]
	mov	DWORD PTR [rcx+rax], r12d

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+56]
	mov	DWORD PTR [rcx+rax], r12d
	movsxd	rax, DWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+184]
	mov	DWORD PTR [rcx+rax+4], r12d

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+312]
	mov	DWORD PTR [rcx+rax+4], r12d

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx-104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8-72]
	mov	DWORD PTR [rcx+rax+4], r12d

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+56]
	mov	DWORD PTR [rcx+rax+4], r12d
	movsxd	rax, DWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+184]
	mov	DWORD PTR [rcx+rax+8], r12d

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+312]
	mov	DWORD PTR [rcx+rax+8], r12d

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx-104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8-72]
	mov	DWORD PTR [rcx+rax+8], r12d

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+56]
	mov	DWORD PTR [rcx+rax+8], r12d
	movsxd	rax, DWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+184]
	mov	DWORD PTR [rcx+rax+12], r12d

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+312]
	mov	DWORD PTR [rcx+rax+12], r12d

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx-104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8-72]
	mov	DWORD PTR [rcx+rax+12], r12d

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+56]
	mov	DWORD PTR [rcx+rax+12], r12d
	movsxd	rax, DWORD PTR [rbx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 269  : 				c.Pheremone_Killed.cached_data[c.Pheremone_Killed.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+184]
	mov	DWORD PTR [rcx+rax+16], r12d

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 270  : 				c.Pheremone_Density.cached_data[c.Pheremone_Density.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+312]
	mov	DWORD PTR [rcx+rax+16], r12d

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx-104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 271  : 				c.Pheremone_Home.cached_data[c.Pheremone_Home.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8-72]
	mov	DWORD PTR [rcx+rax+16], r12d

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	movsxd	rax, DWORD PTR [rbx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\array

; 148  :         return _Elems[_Pos];

	lea	rax, QWORD PTR [rax+rax*2]
	add	rax, rax
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 272  : 				c.Pheremone_Food.cached_data[c.Pheremone_Food.SwapBuffer].Strength[i] = 0;

	mov	rax, QWORD PTR [rbx+rax*8+56]
	mov	DWORD PTR [rcx+rax+16], r12d
	add	rcx, 32					; 00000020H
	cmp	rcx, 1048588				; 0010000cH

; 267  : 			for (int i = 0; i < c.Pheremone_Home.GridSize * c.Pheremone_Home.GridSize; ++i)

	jl	$LL7@UpdateColo

; 273  : 			}
; 274  : 			if (AntColonyCount == 0)

	cmp	DWORD PTR [rsi+10011252], r12d
	jne	SHORT $LN2@UpdateColo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\xstring

; 2827 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 14

; 4050 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T20[rsp+16], r12

; 2827 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	rcx, QWORD PTR $T20[rsp]

; 4051 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T20[rsp+24], 15

; 377  :         _Left = _Right;

	mov	BYTE PTR $T20[rsp], r12b

; 2827 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 276  : 				c.Write("BestColony.txt");

	lea	rcx, QWORD PTR [rbx-5280]
	lea	rdx, QWORD PTR $T20[rsp]
	call	?Write@ColonyController@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ColonyController::Write
$LN2@UpdateColo:

; 257  : 	for (auto& c : ColonyArray)

	add	rbx, 10768				; 00002a10H
	lea	rax, QWORD PTR [rbx-5280]
	cmp	rax, r14
	jne	$LL4@UpdateColo
	vmovaps	xmm11, XMMWORD PTR [rsp+80]
	vmovaps	xmm10, XMMWORD PTR [rsp+96]
	vmovaps	xmm9, XMMWORD PTR [rsp+112]
	vmovaps	xmm8, XMMWORD PTR [rsp+128]
	vmovaps	xmm7, XMMWORD PTR [rsp+144]
	vmovaps	xmm6, XMMWORD PTR [rsp+160]
	mov	r12, QWORD PTR [rsp+176]
	mov	rdi, QWORD PTR [rsp+240]
	mov	rbp, QWORD PTR [rsp+232]
$LN3@UpdateColo:

; 277  : 			}
; 278  : 		}
; 279  : 	}
; 280  : 	FoodScent.Update(this->DeltaTime);

	lea	rcx, QWORD PTR [rsi+5024]
	call	?Update@PheremoneGrid@@QEAAXM@Z		; PheremoneGrid::Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono

; 571  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

	call	QWORD PTR __imp__Query_perf_frequency
	mov	rbx, rax

; 572  :             const long long _Ctr  = _Query_perf_counter();

	call	QWORD PTR __imp__Query_perf_counter
	vmovss	xmm0, DWORD PTR [rsi+10200]
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 282  : 	TimeUpdateColonies += (end - start).count()/1e9;

	vmovsd	xmm2, QWORD PTR __real@3e112e0be826d695
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono

; 575  :             const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

	cdq
	idiv	rbx
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 282  : 	TimeUpdateColonies += (end - start).count()/1e9;

	vcvtss2sd xmm0, xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\include\chrono

; 575  :             const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

	mov	rcx, rax
	imul	rax, rdx, 1000000000			; 3b9aca00H
	imul	rcx, rcx, 1000000000			; 3b9aca00H
	cdq
	idiv	rbx
	vxorps	xmm1, xmm1, xmm1
; File D:\Github\Anterminator\Anterminator\AntSim\World.cpp

; 282  : 	TimeUpdateColonies += (end - start).count()/1e9;

	add	rax, rcx
	sub	rax, r15
	vcvtsi2sd xmm1, xmm1, rax
	vfmadd213sd xmm2, xmm1, xmm0
	vcvtsd2ss xmm0, xmm2, xmm2
	vmovss	DWORD PTR [rsi+10200], xmm0

; 283  : }

	add	rsp, 184				; 000000b8H
	pop	r15
	pop	r14
	pop	rsi
	pop	rbx
	ret	0
?UpdateColonies@World@@QEAAXXZ ENDP			; World::UpdateColonies
_TEXT	ENDS
END
